{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shank\\\\Desktop\\\\react todo app\\\\reactforms\\\\src\\\\update.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update(props) {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    id\n  } = props;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const fetchData = () => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    let result = await fetch('http://localhost:5000/update', {\n      method: \"put\",\n      body: JSON.stringify({\n        id,\n        name,\n        email\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    if (result) {\n      alert(\"Data updated succesfully\");\n      setEmail(\"\");\n      setName(\"\");\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update visitor id:  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"visitor id: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleOnSubmit,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n_s(Update, \"zbNKuD+BoMOpZDcdnbsXnFYW6+I=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Update","props","_s","data","setData","id","name","setName","email","setEmail","fetchData","get","then","response","catch","error","console","handleOnSubmit","e","preventDefault","result","fetch","method","body","JSON","stringify","headers","json","warn","alert","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shank/Desktop/react todo app/reactforms/src/update.js"],"sourcesContent":["import { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction Update(props) {\r\n    const [data, setData] = useState([]);\r\n    const { id } = props;\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\r\n    const fetchData = () => {\r\n        axios\r\n          .get('http://localhost:5000/api/data')\r\n          .then((response) => {\r\n            setData(response.data);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      };\r\n\r\n\tconst handleOnSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet result = await fetch(\r\n\t\t'http://localhost:5000/update', {\r\n\t\t\tmethod: \"put\",\r\n\t\t\tbody: JSON.stringify({id, name, email }),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\tresult = await result.json();\r\n\t\tconsole.warn(result);\r\n\t\tif (result) {\r\n\t\t\talert(\"Data updated succesfully\");\r\n\t\t\tsetEmail(\"\");\r\n\t\t\tsetName(\"\");\r\n            window.location.reload();\r\n\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\r\n            \r\n\t\t\t<h1>Update visitor id:  </h1>\r\n            <p>visitor id: <small><b>{id}</b></small> </p>\r\n\r\n\t\t\t<form action=\"\">\r\n           \r\n\t\t\t\t<input type=\"text\" placeholder=\"name\"\r\n\t\t\t\tvalue={name} onChange={(e) => setName(e.target.value)} />\r\n\t\t\t\t\r\n\t\t\t\t<input type=\"email\" placeholder=\"email\"\r\n\t\t\t\tvalue={email} onChange={(e) => setEmail(e.target.value)} />\r\n           \r\n\t\t\t\t<button type=\"submit\"\r\n\t\t\t\tonClick={handleOnSubmit}>save</button>\r\n\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}