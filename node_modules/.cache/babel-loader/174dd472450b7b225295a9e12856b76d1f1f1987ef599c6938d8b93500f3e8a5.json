{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shank\\\\Desktop\\\\react todo app\\\\react visitor management crud app\\\\src\\\\update.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update(props) {\n  _s();\n  const {\n    id,\n    initialName,\n    initialEmail\n  } = props;\n  const [name, setName] = useState(initialName || \"\");\n  const [email, setEmail] = useState(initialEmail || \"\");\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    let result = await fetch('http://localhost:5000/update', {\n      method: \"put\",\n      body: JSON.stringify({\n        id,\n        name,\n        email\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    if (result) {\n      alert(\"Data updated succesfully\");\n      setEmail(\"\");\n      setName(\"\");\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Update visitor id: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"visitor id: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"bg-gray-100 border border-gray-300 p-2 rounded-md mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"bg-gray-100 border border-gray-300 p-2 rounded-md mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleOnSubmit,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n_s(Update, \"HkXxuRQ+zABCMTMYuQFsMpljJKk=\");\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Update","props","_s","id","initialName","initialEmail","name","setName","email","setEmail","handleOnSubmit","e","preventDefault","result","fetch","method","body","JSON","stringify","headers","json","console","warn","alert","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shank/Desktop/react todo app/react visitor management crud app/src/update.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\n\r\nfunction Update(props) {\r\n   \r\n    const { id,initialName,initialEmail } = props;\r\n\tconst [name, setName] = useState(initialName || \"\");\r\n\tconst [email, setEmail] = useState(initialEmail || \"\");\r\n\r\n   \r\n\r\n\tconst handleOnSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet result = await fetch(\r\n\t\t'http://localhost:5000/update', {\r\n\t\t\tmethod: \"put\",\r\n\t\t\tbody: JSON.stringify({id, name, email }),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\tresult = await result.json();\r\n\t\tconsole.warn(result);\r\n\t\tif (result) {\r\n\t\t\talert(\"Data updated succesfully\");\r\n\t\t\tsetEmail(\"\");\r\n\t\t\tsetName(\"\");\r\n            window.location.reload();\r\n\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"p-4\">\r\n  <h1 className=\"text-2xl font-bold mb-4\">Update visitor id: {id}</h1>\r\n  <p>\r\n    visitor id: <small><b>{id}</b></small>\r\n  </p>\r\n  <form>\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Name\"\r\n      value={name}\r\n      onChange={(e) => setName(e.target.value)}\r\n      className=\"bg-gray-100 border border-gray-300 p-2 rounded-md mb-4\"\r\n    />\r\n    <input\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n      className=\"bg-gray-100 border border-gray-300 p-2 rounded-md mb-4\"\r\n    />\r\n    <button\r\n      type=\"submit\"\r\n      onClick={handleOnSubmit}\r\n      className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\"\r\n    >\r\n      Save\r\n    </button>\r\n  </form>\r\n</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}